group 'catdock.org'
version '1.0.0'

buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.9.0"
    }
}

apply plugin: 'org.hidetake.swagger.generator'
apply plugin: 'kotlin'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0-rc-198"
    
    // Retrofit library
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'

    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.3.1'
}

swaggerSources {
    esi {
        inputFile = file("$projectDir/swagger.json")
        code {
            language = 'kotlin'
            templateDir = file("$projectDir/template/")
            outputDir = file("${rootProject.buildDir}/swagger-esi/")
            components = [
                    models: true,
                    apis: true,
                    supportingFiles: false
            ]
            dependsOn validation
            additionalProperties = [
                    'enumPropertyNaming': 'UPPERCASE',
                    'apiPackage': 'catdock.org.api',
                    'modelPackage': 'catdock.org.model',
                    'packageName': 'catdock.org'
            ]
            rawOptions = [
                    '--type-mappings', 'date=java.util.Date,Date=java.util.Date,date-time=java.util.Date,DateTime=java.util.Date',
            ]
        }
    }
}

sourceSets {
    main.java.srcDirs += "${swaggerSources.esi.code.outputDir}/src/main/kotlin"
}
compileKotlin.dependsOn generateSwaggerCode
